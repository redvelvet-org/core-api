sudo: required

services:
  - docker

# Cache Gcloud SDK between commands
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

# Set env vars
env:
  global:
    - DOCKER_COMPOSE_VERSION=1.8.0
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - PROJECT_NAME_STG=redvelvet-testing
    - CLUSTER_NAME_STG=deployment
    - CLOUDSDK_COMPUTE_ZONE=australia-southeast1-a
    - DOCKER_IMAGE_NAME=core_api
    - KUBE_DEPLOYMENT_NAME=core_api_staging
    - KUBE_DEPLOYMENT_CONTAINER_NAME=core_api_staging

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

script:
  - docker-compose -f docker-compose-build.yml run test yarn --force
  - docker-compose -f docker-compose-build.yml run test yarn run test:build




# before_deploy:
#   - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
#   - source /home/travis/google-cloud-sdk/path.bash.inc
#   - gcloud --quiet version
#   - gcloud --quiet components update
#   - gcloud --quiet components beta update
#   - gcloud --quiet components update kubectl

# deploy:
#   - provider: script
#     script: ./deploy-staging.sh
#     skip_cleanup: true
#     on:
#       branch: develop